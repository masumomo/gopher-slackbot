// Code generated by MockGen. DO NOT EDIT.
// Source: interaction_usecase.go

// Package mock_usecase is a generated GoMock package.
package mock_usecase

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	slack "github.com/slack-go/slack"
	reflect "reflect"
)

// MockInteractionUsecase is a mock of InteractionUsecase interface
type MockInteractionUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockInteractionUsecaseMockRecorder
}

// MockInteractionUsecaseMockRecorder is the mock recorder for MockInteractionUsecase
type MockInteractionUsecaseMockRecorder struct {
	mock *MockInteractionUsecase
}

// NewMockInteractionUsecase creates a new mock instance
func NewMockInteractionUsecase(ctrl *gomock.Controller) *MockInteractionUsecase {
	mock := &MockInteractionUsecase{ctrl: ctrl}
	mock.recorder = &MockInteractionUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockInteractionUsecase) EXPECT() *MockInteractionUsecaseMockRecorder {
	return m.recorder
}

// SaveInteraction mocks base method
func (m *MockInteractionUsecase) SaveInteraction(ctx context.Context, interactionType, action, createdBy string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveInteraction", ctx, interactionType, action, createdBy)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveInteraction indicates an expected call of SaveInteraction
func (mr *MockInteractionUsecaseMockRecorder) SaveInteraction(ctx, interactionType, action, createdBy interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveInteraction", reflect.TypeOf((*MockInteractionUsecase)(nil).SaveInteraction), ctx, interactionType, action, createdBy)
}

// RcvInteraction mocks base method
func (m *MockInteractionUsecase) RcvInteraction(ctx context.Context, payload *slack.InteractionCallback) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RcvInteraction", ctx, payload)
	ret0, _ := ret[0].(error)
	return ret0
}

// RcvInteraction indicates an expected call of RcvInteraction
func (mr *MockInteractionUsecaseMockRecorder) RcvInteraction(ctx, payload interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RcvInteraction", reflect.TypeOf((*MockInteractionUsecase)(nil).RcvInteraction), ctx, payload)
}
